package templates

// RepositoryUtilTestGo ...
var RepositoryUtilTestGo = `// Code generated by {{ .Generator }} {{ .Version }} ({{ .Build }}); DO NOT EDIT

package repository_test

import (
	"os"
	"path/filepath"
	"testing"

	"{{ .Path }}/pkg/assert"
	"{{ .Path }}/pkg/repository"
)

func TestDecode(t *testing.T) {
	path := filepath.Join("testdata", "repository.json")
	encodeErr := repository.EncodeFile(path, map[string]interface{}{
		"foo": map[string]interface{}{
			"id":   "bar",
			"name": "hugo",
			"age":  42,
		},
	})
	res, decodeErr := repository.DecodeFile(path)
	assert.That("Decode Error should be nil", t, decodeErr, nil)
	assert.That("Encode Error should be nil", t, encodeErr, nil)
	assert.That("Result should not be nil", t, res == nil, false)
	assert.That("Key foo should exist", t, res["foo"] != nil, true)
	assert.That("Key id has Value bar", t, res["foo"].(map[string]interface{})["id"], "bar")
	os.Remove(path)
}
`
